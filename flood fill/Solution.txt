class Solution {
public:
    int check;
    int color;
    void fill(vector<vector<int>>& image,vector<vector<int>> &visited, int i, int j, int &m, int &n){
        //cout<<i<<" "<<j<<"\n";
        if(i>m-1 || j>n-1 || i<0 || j<0){ 
            return;
        }
        if(image[i][j]!=check || visited[i][j]==1){ 
            return;
        }
        
        image[i][j]=color;

        visited[i][j]=1;
        fill(image,visited,i-1,j,m,n);//up
        fill(image,visited,i,j-1,m,n);//left
        fill(image,visited,i+1,j,m,n);//down
        fill(image,visited,i,j+1,m,n);//right
        visited[i][j]=0;

        
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int c) {
        int m = image.size();
        int n = image[0].size();
        check=image[sr][sc];
        color=c;
        if(check==c){
            return image;
        }
        vector<vector<int>> visited(m,vector<int>(n,0));
        fill(image,visited, sr, sc,m,n);
        return image;
    }
};